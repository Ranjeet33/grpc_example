// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: books.proto

package books

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RequestID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *RequestID) Reset() {
	*x = RequestID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_books_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestID) ProtoMessage() {}

func (x *RequestID) ProtoReflect() protoreflect.Message {
	mi := &file_books_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestID.ProtoReflect.Descriptor instead.
func (*RequestID) Descriptor() ([]byte, []int) {
	return file_books_proto_rawDescGZIP(), []int{0}
}

func (x *RequestID) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type ResponceBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Des  string `protobuf:"bytes,3,opt,name=Des,proto3" json:"Des,omitempty"`
	Date string `protobuf:"bytes,4,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *ResponceBook) Reset() {
	*x = ResponceBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_books_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponceBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponceBook) ProtoMessage() {}

func (x *ResponceBook) ProtoReflect() protoreflect.Message {
	mi := &file_books_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponceBook.ProtoReflect.Descriptor instead.
func (*ResponceBook) Descriptor() ([]byte, []int) {
	return file_books_proto_rawDescGZIP(), []int{1}
}

func (x *ResponceBook) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ResponceBook) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResponceBook) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *ResponceBook) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type AllResponceBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B []*ResponceBook `protobuf:"bytes,1,rep,name=b,proto3" json:"b,omitempty"`
}

func (x *AllResponceBook) Reset() {
	*x = AllResponceBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_books_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllResponceBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllResponceBook) ProtoMessage() {}

func (x *AllResponceBook) ProtoReflect() protoreflect.Message {
	mi := &file_books_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllResponceBook.ProtoReflect.Descriptor instead.
func (*AllResponceBook) Descriptor() ([]byte, []int) {
	return file_books_proto_rawDescGZIP(), []int{2}
}

func (x *AllResponceBook) GetB() []*ResponceBook {
	if x != nil {
		return x.B
	}
	return nil
}

type Updatebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	B  *ResponceBook `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *Updatebook) Reset() {
	*x = Updatebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_books_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Updatebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Updatebook) ProtoMessage() {}

func (x *Updatebook) ProtoReflect() protoreflect.Message {
	mi := &file_books_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Updatebook.ProtoReflect.Descriptor instead.
func (*Updatebook) Descriptor() ([]byte, []int) {
	return file_books_proto_rawDescGZIP(), []int{3}
}

func (x *Updatebook) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Updatebook) GetB() *ResponceBook {
	if x != nil {
		return x.B
	}
	return nil
}

type None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *None) Reset() {
	*x = None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_books_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*None) ProtoMessage() {}

func (x *None) ProtoReflect() protoreflect.Message {
	mi := &file_books_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use None.ProtoReflect.Descriptor instead.
func (*None) Descriptor() ([]byte, []int) {
	return file_books_proto_rawDescGZIP(), []int{4}
}

var File_books_proto protoreflect.FileDescriptor

var file_books_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x58, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x44, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x22, 0x34, 0x0a, 0x0f, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x21,
	0x0a, 0x01, 0x62, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x01,
	0x62, 0x22, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x01, 0x62, 0x22, 0x06, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x32, 0xc5, 0x02, 0x0a, 0x08, 0x61,
	0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x0b, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x6e, 0x6f,
	0x6e, 0x65, 0x1a, 0x16, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x07,
	0x67, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x10, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x13, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x00,
	0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x13,
	0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x1a, 0x0b, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x6e, 0x6f, 0x6e, 0x65,
	0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x12, 0x10, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x6e, 0x6f, 0x6e, 0x65, 0x22,
	0x00, 0x12, 0x36, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12,
	0x11, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x1a, 0x13, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x72, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x11, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x1a, 0x13, 0x2e, 0x62, 0x6f,
	0x6f, 0x6b, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_books_proto_rawDescOnce sync.Once
	file_books_proto_rawDescData = file_books_proto_rawDesc
)

func file_books_proto_rawDescGZIP() []byte {
	file_books_proto_rawDescOnce.Do(func() {
		file_books_proto_rawDescData = protoimpl.X.CompressGZIP(file_books_proto_rawDescData)
	})
	return file_books_proto_rawDescData
}

var file_books_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_books_proto_goTypes = []interface{}{
	(*RequestID)(nil),       // 0: books.requestID
	(*ResponceBook)(nil),    // 1: books.responceBook
	(*AllResponceBook)(nil), // 2: books.allResponceBook
	(*Updatebook)(nil),      // 3: books.updatebook
	(*None)(nil),            // 4: books.none
}
var file_books_proto_depIdxs = []int32{
	1, // 0: books.allResponceBook.b:type_name -> books.responceBook
	1, // 1: books.updatebook.b:type_name -> books.responceBook
	4, // 2: books.allBooks.getAllBook:input_type -> books.none
	0, // 3: books.allBooks.getBook:input_type -> books.requestID
	1, // 4: books.allBooks.createBook:input_type -> books.responceBook
	0, // 5: books.allBooks.deleteBook:input_type -> books.requestID
	3, // 6: books.allBooks.updateBook:input_type -> books.updatebook
	3, // 7: books.allBooks.replaceBook:input_type -> books.updatebook
	2, // 8: books.allBooks.getAllBook:output_type -> books.allResponceBook
	1, // 9: books.allBooks.getBook:output_type -> books.responceBook
	4, // 10: books.allBooks.createBook:output_type -> books.none
	4, // 11: books.allBooks.deleteBook:output_type -> books.none
	1, // 12: books.allBooks.updateBook:output_type -> books.responceBook
	1, // 13: books.allBooks.replaceBook:output_type -> books.responceBook
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_books_proto_init() }
func file_books_proto_init() {
	if File_books_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_books_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_books_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponceBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_books_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllResponceBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_books_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Updatebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_books_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_books_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_books_proto_goTypes,
		DependencyIndexes: file_books_proto_depIdxs,
		MessageInfos:      file_books_proto_msgTypes,
	}.Build()
	File_books_proto = out.File
	file_books_proto_rawDesc = nil
	file_books_proto_goTypes = nil
	file_books_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AllBooksClient is the client API for AllBooks service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AllBooksClient interface {
	GetAllBook(ctx context.Context, in *None, opts ...grpc.CallOption) (*AllResponceBook, error)
	GetBook(ctx context.Context, in *RequestID, opts ...grpc.CallOption) (*ResponceBook, error)
	CreateBook(ctx context.Context, in *ResponceBook, opts ...grpc.CallOption) (*None, error)
	DeleteBook(ctx context.Context, in *RequestID, opts ...grpc.CallOption) (*None, error)
	UpdateBook(ctx context.Context, in *Updatebook, opts ...grpc.CallOption) (*ResponceBook, error)
	ReplaceBook(ctx context.Context, in *Updatebook, opts ...grpc.CallOption) (*ResponceBook, error)
}

type allBooksClient struct {
	cc grpc.ClientConnInterface
}

func NewAllBooksClient(cc grpc.ClientConnInterface) AllBooksClient {
	return &allBooksClient{cc}
}

func (c *allBooksClient) GetAllBook(ctx context.Context, in *None, opts ...grpc.CallOption) (*AllResponceBook, error) {
	out := new(AllResponceBook)
	err := c.cc.Invoke(ctx, "/books.allBooks/getAllBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allBooksClient) GetBook(ctx context.Context, in *RequestID, opts ...grpc.CallOption) (*ResponceBook, error) {
	out := new(ResponceBook)
	err := c.cc.Invoke(ctx, "/books.allBooks/getBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allBooksClient) CreateBook(ctx context.Context, in *ResponceBook, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/books.allBooks/createBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allBooksClient) DeleteBook(ctx context.Context, in *RequestID, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/books.allBooks/deleteBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allBooksClient) UpdateBook(ctx context.Context, in *Updatebook, opts ...grpc.CallOption) (*ResponceBook, error) {
	out := new(ResponceBook)
	err := c.cc.Invoke(ctx, "/books.allBooks/updateBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allBooksClient) ReplaceBook(ctx context.Context, in *Updatebook, opts ...grpc.CallOption) (*ResponceBook, error) {
	out := new(ResponceBook)
	err := c.cc.Invoke(ctx, "/books.allBooks/replaceBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AllBooksServer is the server API for AllBooks service.
type AllBooksServer interface {
	GetAllBook(context.Context, *None) (*AllResponceBook, error)
	GetBook(context.Context, *RequestID) (*ResponceBook, error)
	CreateBook(context.Context, *ResponceBook) (*None, error)
	DeleteBook(context.Context, *RequestID) (*None, error)
	UpdateBook(context.Context, *Updatebook) (*ResponceBook, error)
	ReplaceBook(context.Context, *Updatebook) (*ResponceBook, error)
}

// UnimplementedAllBooksServer can be embedded to have forward compatible implementations.
type UnimplementedAllBooksServer struct {
}

func (*UnimplementedAllBooksServer) GetAllBook(context.Context, *None) (*AllResponceBook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllBook not implemented")
}
func (*UnimplementedAllBooksServer) GetBook(context.Context, *RequestID) (*ResponceBook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBook not implemented")
}
func (*UnimplementedAllBooksServer) CreateBook(context.Context, *ResponceBook) (*None, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBook not implemented")
}
func (*UnimplementedAllBooksServer) DeleteBook(context.Context, *RequestID) (*None, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBook not implemented")
}
func (*UnimplementedAllBooksServer) UpdateBook(context.Context, *Updatebook) (*ResponceBook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBook not implemented")
}
func (*UnimplementedAllBooksServer) ReplaceBook(context.Context, *Updatebook) (*ResponceBook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplaceBook not implemented")
}

func RegisterAllBooksServer(s *grpc.Server, srv AllBooksServer) {
	s.RegisterService(&_AllBooks_serviceDesc, srv)
}

func _AllBooks_GetAllBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(None)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AllBooksServer).GetAllBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/books.allBooks/GetAllBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AllBooksServer).GetAllBook(ctx, req.(*None))
	}
	return interceptor(ctx, in, info, handler)
}

func _AllBooks_GetBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AllBooksServer).GetBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/books.allBooks/GetBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AllBooksServer).GetBook(ctx, req.(*RequestID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AllBooks_CreateBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponceBook)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AllBooksServer).CreateBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/books.allBooks/CreateBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AllBooksServer).CreateBook(ctx, req.(*ResponceBook))
	}
	return interceptor(ctx, in, info, handler)
}

func _AllBooks_DeleteBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AllBooksServer).DeleteBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/books.allBooks/DeleteBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AllBooksServer).DeleteBook(ctx, req.(*RequestID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AllBooks_UpdateBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Updatebook)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AllBooksServer).UpdateBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/books.allBooks/UpdateBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AllBooksServer).UpdateBook(ctx, req.(*Updatebook))
	}
	return interceptor(ctx, in, info, handler)
}

func _AllBooks_ReplaceBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Updatebook)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AllBooksServer).ReplaceBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/books.allBooks/ReplaceBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AllBooksServer).ReplaceBook(ctx, req.(*Updatebook))
	}
	return interceptor(ctx, in, info, handler)
}

var _AllBooks_serviceDesc = grpc.ServiceDesc{
	ServiceName: "books.allBooks",
	HandlerType: (*AllBooksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getAllBook",
			Handler:    _AllBooks_GetAllBook_Handler,
		},
		{
			MethodName: "getBook",
			Handler:    _AllBooks_GetBook_Handler,
		},
		{
			MethodName: "createBook",
			Handler:    _AllBooks_CreateBook_Handler,
		},
		{
			MethodName: "deleteBook",
			Handler:    _AllBooks_DeleteBook_Handler,
		},
		{
			MethodName: "updateBook",
			Handler:    _AllBooks_UpdateBook_Handler,
		},
		{
			MethodName: "replaceBook",
			Handler:    _AllBooks_ReplaceBook_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "books.proto",
}
